// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type ItemsSuitableFor string

const (
	ItemsSuitableForDOGS ItemsSuitableFor = "DOGS"
	ItemsSuitableForCATS ItemsSuitableFor = "CATS"
)

func (e *ItemsSuitableFor) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ItemsSuitableFor(s)
	case string:
		*e = ItemsSuitableFor(s)
	default:
		return fmt.Errorf("unsupported scan type for ItemsSuitableFor: %T", src)
	}
	return nil
}

type NullItemsSuitableFor struct {
	ItemsSuitableFor ItemsSuitableFor
	Valid            bool // Valid is true if ItemsSuitableFor is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullItemsSuitableFor) Scan(value interface{}) error {
	if value == nil {
		ns.ItemsSuitableFor, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ItemsSuitableFor.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullItemsSuitableFor) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ItemsSuitableFor), nil
}

type ItemsType string

const (
	ItemsTypeFOOD ItemsType = "FOOD"
	ItemsTypeTOY  ItemsType = "TOY"
)

func (e *ItemsType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ItemsType(s)
	case string:
		*e = ItemsType(s)
	default:
		return fmt.Errorf("unsupported scan type for ItemsType: %T", src)
	}
	return nil
}

type NullItemsType struct {
	ItemsType ItemsType
	Valid     bool // Valid is true if ItemsType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullItemsType) Scan(value interface{}) error {
	if value == nil {
		ns.ItemsType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ItemsType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullItemsType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ItemsType), nil
}

type Item struct {
	ID             string
	Name           string
	Price          float64
	Image          string
	ExpirationTime sql.NullString
	Weight         sql.NullString
	SuitableFor    NullItemsSuitableFor
	Material       sql.NullString
	Type           ItemsType
}
