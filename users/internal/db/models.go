// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql/driver"
	"fmt"
)

type UsersType string

const (
	UsersTypeBASIC UsersType = "BASIC"
	UsersTypeADMIN UsersType = "ADMIN"
)

func (e *UsersType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UsersType(s)
	case string:
		*e = UsersType(s)
	default:
		return fmt.Errorf("unsupported scan type for UsersType: %T", src)
	}
	return nil
}

type NullUsersType struct {
	UsersType UsersType
	Valid     bool // Valid is true if UsersType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUsersType) Scan(value interface{}) error {
	if value == nil {
		ns.UsersType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UsersType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUsersType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UsersType), nil
}

type User struct {
	ID       string
	Username string
	Password string
	Name     string
	Type     UsersType
}
