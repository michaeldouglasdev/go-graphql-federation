package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"
	"go-graphql-apollo-federation/reviews/graph/model"
)

// Create is the resolver for the create field.
func (r *itemReviewsMutationsResolver) Create(ctx context.Context, obj *model.ItemReviewsMutations, data model.ItemReview) (model.CreateItemReviewResponse, error) {
	panic(fmt.Errorf("not implemented: Create - create"))
}

// Reviews is the resolver for the reviews field.
func (r *mutationResolver) Reviews(ctx context.Context) (*model.ItemReviewsMutations, error) {
	panic(fmt.Errorf("not implemented: Reviews - reviews"))
}

// Reviews is the resolver for the reviews field.
func (r *queryResolver) Reviews(ctx context.Context) (*model.ReviewsQueries, error) {
	panic(fmt.Errorf("not implemented: Reviews - reviews"))
}

// List is the resolver for the list field.
func (r *reviewsQueriesResolver) List(ctx context.Context, obj *model.ReviewsQueries) ([]*model.ItemReview, error) {
	panic(fmt.Errorf("not implemented: List - list"))
}

// ItemReviewsMutations returns ItemReviewsMutationsResolver implementation.
func (r *Resolver) ItemReviewsMutations() ItemReviewsMutationsResolver {
	return &itemReviewsMutationsResolver{r}
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// ReviewsQueries returns ReviewsQueriesResolver implementation.
func (r *Resolver) ReviewsQueries() ReviewsQueriesResolver { return &reviewsQueriesResolver{r} }

type itemReviewsMutationsResolver struct{ *Resolver }
type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type reviewsQueriesResolver struct{ *Resolver }
